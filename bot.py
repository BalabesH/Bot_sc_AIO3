import asyncio
# from venv import logger
from loguru import logger
import logging
import sys
from aiogram import types, Router, F
from aiogram.filters import Command, MagicData
from aiogram import types
from bot_core import dp, bot
from aiogram.filters.callback_data import CallbackQuery
from data.common_data import user_data, emojis
from aiogram.types import Message
from config.config import bot_admins
from utils.f_service_bot_pgsql import f_logging
from PIL import Image

#—Ä–æ—É—Ç–µ—Ä –¥–ª—è —Ä–µ–∂–∏–º–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –∏ —Å—Ç–∞–≤–∏–º –µ–º—É —Ñ–∏–ª—å—Ç—Ä—ã –Ω–∞ —Ç–∏–ø—ã
maintenance_router = Router()
maintenance_router.message.filter(MagicData(F.maintenance_mode.is_(True)))
maintenance_router.callback_query.filter(MagicData(F.maintenance_mode.is_(True)))

# –•—ç–Ω–¥–ª–µ—Ä—ã —ç—Ç–æ–≥–æ —Ä–æ—É—Ç–µ—Ä–∞ –ø–µ—Ä–µ—Ö–≤–∞—Ç—è—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–æ–ª–±—ç–∫–∏,
# –µ—Å–ª–∏ maintenance_mode —Ä–∞–≤–µ–Ω True
@maintenance_router.message()
async def any_message(message: Message):
    await message.answer("–ë–æ—Ç –≤ —Ä–µ–∂–∏–º–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ. –ë—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ ... üõ†")


@maintenance_router.callback_query()
async def any_callback(callback: CallbackQuery):
    await callback.answer(
        text="–ë–æ—Ç –≤ —Ä–µ–∂–∏–º–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ. –ë—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ ... üõ†",
        show_alert=True
    )

@dp.message(F.text == 'test')
async def test(message: Message):
    await message.answer(f"Your annot: {message.content_type}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
@logger.catch
async def main() -> None:
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –∏ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –≤—Å–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ –≤—Ö–æ–¥—è—â–∏–µ
    # –î–∞, —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –¥–∞–∂–µ –µ—Å–ª–∏ —É –≤–∞—Å –ø–æ–ª–ª–∏–Ω–≥
    # await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    asyncio.run(main())
